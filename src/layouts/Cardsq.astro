---
export interface Props {
    post: {
      imagePath: string;
      title: {
         rendered: string;
      }
      content: string;
      slug: string;
      categories : {};
      yoast_head_json: {
         og_image: [
            {
               url: string;
            }
         ]
         article_published_time: string;
         author:string;         
      }
    };
    
}

const { post } = Astro.props;

var url_seccion;
//console.log(post.categories[0]);
switch (post.categories[0]){
    case 143:        
        url_seccion = 'news';
    break;
    case 537:        
        url_seccion = 'promociones';
    break;
    case 578:
        url_seccion = 'purplenoise';
    break;
    case 505:
        url_seccion = 'beattrends';
    break;
    case 531:
        url_seccion = 'nerdosis';
    break;
    default:
        url_seccion = 'popnews';    
    break;      
}


/*const section = post.yoast_head_json.schema['@graph'][0].articleSection; 
console.log(section);*/

---

<div class="card w-full md:w-1/2 lg:w-1/3 xl:w-1/3 md:p-4 pb-4 ">
    <article>
    <div class="glows"></div>
    <div class="overflow-hidden rounded-lg">
        <a href={`/${url_seccion}/${post.slug}/`}>
            <img class="block h-auto w-full aspect-video object-cover" src={post.yoast_head_json.og_image[0].url} alt={post.title.rendered} />
        </a>
        <div class="flex items-center justify-between leading-tight p-2 md:p-4 min-h-40">
            <a class="no-underline" href={`/${url_seccion}/${post.slug}/`}>
                <h2 class="text-base text-purple-900 font-bold hover:text-gray-800" set:html={post.title.rendered}></h2>
            </a>
        </div>
        <div class="flex items-center justify-between p-2 md:px-4 text-xs font-bold uppercase text-gray-500">
            <p>{post.yoast_head_json.author}</p>
            <p>{post.yoast_head_json.article_published_time.substring(0, 10)}</p>
        </div>
    </div>
    </article>
</div>

<style>

    :root {
      --bg: hsl(246 44% 7%);
      --border: hsl(280 10% 50% / 1);
      --card: hsl(0 0% 0%);
      --color: hsl(240 18% 80%);
      --border-width: 2px;
      --border-radius: 12px;
      --gradient: conic-gradient(from 180deg at 50% 70%, hsla(0, 0%, 98%, 1) 0deg, #eec32d 72.0000010728836deg, #ec4b4b 144.0000021457672deg, #709ab9 216.00000858306885deg, #4dffbf 288.0000042915344deg, hsla(0, 0%, 98%, 1) 1turn);
    }

    @property --start {
      syntax: '<number>';
      inherits: true;
      initial-value: 0;
    }



    .container {
      --spread: 60;
      display: flex;
      flex-wrap: wrap;
      flex-direction: var(--direction);
      gap: calc(var(--gap) * 1px);
      margin: 0 auto;
      justify-content: center;
      place-items: center;
      position: relative;
      padding: 2rem;
      touch-action: none;
    }

    article {
      --active: 0.15;
      --start: 0;
      height: 100%;
      background: var(--card);
      aspect-ratio: 330 / 400;
      border-radius: var(--border-radius);
      gap: 0.25rem;
      position: relative;
    }

    article:is(:hover, :focus-visible) {
      z-index: 2;
    }

    .glows {
      pointer-events: none;
      position: absolute;
      inset: 0;
      filter: blur(calc(var(--blur) * 1px));
    }

    .glows::after,
    .glows::before {
      --alpha: 0;
      content: "";
      background: var(--gradient);
      background-attachment: fixed;
      position: absolute;
      inset: -5px;
      border: 10px solid transparent;
      border-radius: var(--border-radius);
      mask:
        linear-gradient(#0000, #0000),
        conic-gradient(from calc((var(--start) - (var(--spread) * 0.5)) * 1deg), #000 0deg, #fff, #0000 calc(var(--spread) * 1deg));
      mask-composite: intersect;
      mask-clip: padding-box, border-box;
      opacity: var(--active);
      transition: opacity 1s;
    }

    article::before {
      position: absolute;
      inset: 0;
      border: var(--border-width) solid transparent;
      content: "";
      border-radius: var(--border-radius);
      pointer-events: none;
      background: var(--border);
      background-attachment: fixed;
      border-radius: var(--border-radius);
      mask:
        linear-gradient(#0000, #0000),
        conic-gradient(from calc(((var(--start) + (var(--spread) * 0.25)) - (var(--spread) * 1.5)) * 1deg),
          hsl(0 0% 100% / 0.15) 0deg,
          white,
          hsl(0 0% 100% / 0.15) calc(var(--spread) * 2.5deg));
      mask-clip: padding-box, border-box;
      mask-composite: intersect;
      opacity: var(--active);
      transition: opacity 1s;
    }

    article::after {
      --bg-size: 100%;
      content: "";
      pointer-events: none;
      position: absolute;
      background: var(--gradient);
      background-attachment: fixed;
      border-radius: var(--border-radius);
      opacity: var(--active, 0);
      transition: opacity 1s;
      --alpha: 0;
      inset: 0;
      border: var(--border-width) solid transparent;
      mask:
        linear-gradient(#0000, #0000),
        conic-gradient(from calc(((var(--start) + (var(--spread) * 0.25)) - (var(--spread) * 0.5)) * 1deg), #0000 0deg, #fff, #0000 calc(var(--spread) * 0.5deg));
      filter: brightness(1.5);
      mask-clip: padding-box, border-box;
      mask-composite: intersect;
    }
/*
    a {
      color: var(--color);
      text-decoration: none;
      opacity: 0.5;
      display: inline-block;
      align-self: start;
      transition: opacity 0.2s;
    }

    a:is(:hover, :focus-visible) {
      opacity: 1;
    }

    article h2 {
      margin: 0;
      padding: 1rem 0;
      font-weight: 100;
      font-size: 1.5rem;
    }

    .header {
      position: relative;
      flex: 1;
      display: flex;
      align-items: center;
    }

    .header svg {
      --count: 4;
      width: 106px;
    }

    .header svg:nth-of-type(2),
    .header svg:nth-of-type(3),
    .header svg:nth-of-type(4) {
      position: absolute;
      z-index: calc(var(--count) - var(--index));
      translate: calc(var(--index) * 30%) 0;
      opacity: calc(var(--count) / (2 * (var(--index) * 10)));
    }

    .header svg:nth-of-type(2) {
      --index: 1;
    }

    .header svg:nth-of-type(3) {
      --index: 2;
    }

    .header svg:nth-of-type(4) {
      --index: 3;
    }

    .badge svg {
      width: 16px;
    }
*/
    .dg {
      display: none !important;
    }
  </style>

