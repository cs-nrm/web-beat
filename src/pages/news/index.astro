---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import Card from '../../layouts/Cardsq.astro';

const res = await fetch("https://beatdigital.mx/wp-json/wp/v2/posts?_embed&per_page=9&_fields=title,slug,yoast_head_json,categories&categories=143");
const posts = await res.json();



---
<!doctype html>
<html lang="es">
	<head>
		<BaseHead title={SITE_TITLE} seccion="Pop News" description={SITE_DESCRIPTION} />
		<meta charset="utf-8"/>
	</head>
	<body>
		<Header title={SITE_TITLE} />
		
		<main>
            <div class="container my-12 mx-auto px-4 md:px-12">
				<h1 class="py-4 font-bold yellow-beat text-4xl md:text-5xl lg:text-4xl xl:text-5xl [text-shadow:2px_4px_2px_rgb(86_85_83_/_64%)]">News</h1>
                <section class="flex flex-wrap -mx-1 lg:-mx-4 container">
                    {
                        posts.map((post:any) => ( 
                        <>
                        <Card {post} />
                        </>
                        ))
                    }
                        <article>
                        <div class="glows"></div>
                        </article>
                        <article>
                        <div class="glows"></div>
                        </article>
                        <article>
                        <div class="glows"></div>
                        </article>
                </section>
                <div class="text-center mt-20">
                    <a href="/popnews/2">
                        <button class="group relative h-8 w-36 overflow-hidden rounded-lg bg-gray-100 text-base shadow">
                            <div class="absolute inset-0 w-3 bg-pink-600 transition-all duration-[250ms] ease-out group-hover:w-full"></div>
                            <span class="relative text-black group-hover:text-white">Siguiente</span>
                        </button>
                    </a>
                </div>
            </div>
		</main>
		<Footer />
	</body>
</html>


<script is:inline>
    /*import {GUI} from 'https://cdn.skypack.dev/dat.gui'*/
    const CONTAINER = document.querySelector('.container')
    const CARDS = document.querySelectorAll('article')
    const CONFIG = {
      proximity: 40,
      spread: 80,
      blur: 20,
      gap: 32,
      vertical: false,
      opacity: 0.15, // Default value for inactive opacity
    }
    const PROXIMITY = 10
    const UPDATE = (event) => {
      // get the angle based on the center point of the card and pointer position
      for (const CARD of CARDS) {
        // Check the card against the proximity and then start updating
        const CARD_BOUNDS = CARD.getBoundingClientRect()
        // Get distance between pointer and outerbounds of card
        if (
          event?.x > CARD_BOUNDS.left - CONFIG.proximity &&
          event?.x < CARD_BOUNDS.left + CARD_BOUNDS.width + CONFIG.proximity &&
          event?.y > CARD_BOUNDS.top - CONFIG.proximity &&
          event?.y < CARD_BOUNDS.top + CARD_BOUNDS.height + CONFIG.proximity) {
          // If within proximity set the active opacity
          CARD.style.setProperty('--active', 1)
        } else {
          CARD.style.setProperty('--active', CONFIG.opacity)
        }
        const CARD_CENTER = [
          CARD_BOUNDS.left + CARD_BOUNDS.width * 0.5,
          CARD_BOUNDS.top + CARD_BOUNDS.height * 0.5
        ]
        let ANGLE = Math.atan2(event?.y - CARD_CENTER[1], event?.x - CARD_CENTER[0]) * 180 / Math.PI
        ANGLE = ANGLE < 0 ? ANGLE + 360 : ANGLE;
        CARD.style.setProperty('--start', ANGLE + 90)
      }
    }
    document.body.addEventListener('pointermove', UPDATE)
    const RESTYLE = () => {
      CONTAINER.style.setProperty('--gap', CONFIG.gap)
      CONTAINER.style.setProperty('--blur', CONFIG.blur)
      CONTAINER.style.setProperty('--spread', CONFIG.spread)
      CONTAINER.style.setProperty('--direction', CONFIG.vertical ? 'column' : 'row')
    }
    /*const CTRL = new GUI({
      width: 0,
      height:1
      
    })
    CTRL.add(CONFIG, 'spread', 10, 180, 1).name('Spread (deg)').onChange(RESTYLE)
    CTRL.add(CONFIG, 'proximity', 10, 180, 1).name('Active Proximity (px)').onChange(RESTYLE)
    CTRL.add(CONFIG, 'gap', 10, 100, 1).name('Gap (px)').onChange(RESTYLE)
    CTRL.add(CONFIG, 'blur', 0, 50, 1).name('Blur (px)').onChange(RESTYLE)
    CTRL.add(CONFIG, 'opacity', 0, 1, 0.01).name('Inactive Opacity').onChange(RESTYLE)
    CTRL.add(CONFIG, 'vertical').name('Vertical Layout').onChange(RESTYLE)*/
    RESTYLE()
    UPDATE()
</script>  